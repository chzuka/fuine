name: GitHub CI

env:
  csproj-path: src/Fuine
  app-name: fuine

on:
  push:
    branches:
      - "main"
    tags:
      - "*"

jobs:
  publish:
    runs-on: windows-latest
    permissions:
      contents: write

    strategy:
      matrix:
        rid: [win-x86,win-x64,win-arm64]
        mode: [self-contained,framework-dependent]
        configuration: [debug,release]
        version: ['7.0.x']
        exclude:
          - rid: ${{ startsWith(github.ref,'refs/tags/') || 'win-x86' }}
          - rid: ${{ startsWith(github.ref,'refs/tags/') || 'win-arm64' }}
          - mode: ${{ startsWith(github.ref,'refs/tags/') || 'self-contained' }}
          - configuration: ${{ startsWith(github.ref,'refs/tags/') || 'release' }}
          - configuration: ${{ startsWith(github.ref,'refs/tags/') && 'debug' }}

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: cache dotnet
        uses: actions/cache@v3
        id: cache-dotnet
        with:
          path: ~/.dotnet
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.sln') }}

      - name: install dotnet
        uses: actions/setup-dotnet@v3
        if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
        with:
          dotnet-version: ${{ matrix.version }}

      - name: cache nuget
        uses: actions/cache@v3
        id: cache-nuget
        with:
          path: ~/.nuget
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}

      - name: install nuget
        if: ${{ steps.cache-nuget.outputs.cache-hit != 'true' }}
        run: |
          dotnet restore ${{ github.workspace }}/${{ env.csproj-path }}

      - name: publish dotnet
        run: |
          cd ${{ github.workspace }}/${{ env.csproj-path }}
          dotnet build --configuration ${{ matrix.configuration }}
          dotnet publish -c ${{ matrix.configuration }} -o ${{ github.workspace }}/publish/${{ matrix.mode }}-${{ matrix.rid }}/${{ env.app-name }} -r ${{ matrix.rid }} --self-contained ${{ matrix.mode == 'self-contained' }} /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true

      - name: upload zip
        uses: actions/upload-artifact@v3
        if: startsWith(github.ref,'refs/tags/') != true
        with:
          name: ${{ env.app-name }}-${{ matrix.mode }}-${{ matrix.rid }}
          path: ${{ github.workspace }}/publish/${{ matrix.mode }}-${{ matrix.rid }}/${{ env.app-name }}
          
      - name: create zip
        if: startsWith(github.ref,'refs/tags/') 
        run: |
          compress-archive -path ${{ github.workspace }}/publish/${{ matrix.mode }}-${{ matrix.rid }}/${{ env.app-name }} -destinationpath ${{ github.workspace }}/publish/${{ env.app-name }}-${{ matrix.mode }}-${{ matrix.rid }}.zip

      - name: create release
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref,'refs/tags/') 
        with:
          token: ${{ secrets.github_token }}
          artifacts: ${{ github.workspace }}/publish/${{ env.app-name }}-${{ matrix.mode }}-${{ matrix.rid }}.zip
          allowUpdates: true
          generateReleaseNotes: true
          makeLatest: true